#%RAML 1.0
---
#===============================================================
#  References:
#    - RAML Specification - https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md
#===============================================================
title: campaign Upload
uses: 
  traits: lib/traits/traits.raml
version: v1
baseUri: "/{version}"
mediaType:  application/json
protocols: [ HTTP, HTTPS ]
types:

  getPartnerOffersResponseObject: !include schemas/body/get-partner-offers.json
  partnerOffer: !include schemas/body/partner-offer.json

  postPartnerOffersResponseObject: !include schemas/body/post-partner-offers.json

  putPartnerOffersResponseObject: !include schemas/body/put-partner-offers.json
  putPartnerOffersRequestObject: !include schemas/body/put-partner-offers-request.json

  postPartnerOffersRecordResponseObject: !include schemas/body/post-partner-offers-record.json
  deletePartnerOffersResponseObject: !include schemas/body/delete-partner-offers.json



  getCorporateOffersResponseObject: !include schemas/body/get-corporate-offers.json
  corporateOffer: !include schemas/body/corporate-offer.json

  postCorporateOffersResponseObject: !include schemas/body/post-corporate-offers.json 

  putCorporateOffersResponseObject: !include schemas/body/put-corporate-offers.json
  putCorporateOffersRequestObject: !include schemas/body/put-corporate-offers-request.json

  postCorporateOffersRecordResponseObject: !include schemas/body/post-corporate-offers-record.json
  deleteCorporateOffersResponseObject: !include schemas/body/delete-corporate-offers.json

#===============================================================
# API resource definitions
#===============================================================
/partner-offers:
  post:
    body:
      multipart/form-data:
        properties:
          file:
            description: The file to be uploaded
            required: true
            type: file
    responses:
        200:
            description: request to create item accepted
            body:
              application/json:
                schema: postPartnerOffersResponseObject
                example: !include examples/body/example-post-partner-offers.json
                
  get:
    responses:
        200:
            body:
                application/json:
                    schema: getPartnerOffersResponseObject
                    example: !include examples/body/example-get-partner-offers.json
  put: 
    body:
      application/json:
        schema: putPartnerOffersRequestObject
        example: !include examples/body/example-put-partner-offers-request.json
    responses: 
          200:
            description: Update Partner Offers Table
            body: 
              application/json:
                schema: putPartnerOffersResponseObject
                example: !include examples/body/example-put-partner-offers-response.json
  /{id}:
    description: Delete specific record
    delete:
      responses:
        200:
          body:
            application/json:
                schema: deletePartnerOffersResponseObject
                example: !include examples/body/example-delete-partner-offers.json
  /record:
    /{id}:
      uriParameters: 
              id:
                type: string
      post:
        is: [traits.BadRequestError, traits.InternalServerError]
        description: Approve/Reject specific record
        queryParameters:
          action:
            description: "Action To Take"
            required: true
            type: string
        responses:
          200:
            description: approve/reject record
            body:
              application/json:
                schema: postPartnerOffersRecordResponseObject
                example: !include examples/body/example-post-partner-offers-record.json 

/corporate-offers:
  post:
    body:
      multipart/form-data:
        properties:
          file:
            description: The file to be uploaded
            required: true
            type: file
    responses:
        200:
            description: request to create item accepted
            body:
              application/json:
                schema: postCorporateOffersResponseObject
                example: !include examples/body/example-post-corporate-offers.json
                
  get:
    responses:
        200:
            body:
                application/json:
                    schema: getCorporateOffersResponseObject
                    #example: !include examples/body/example-get-corporate-offers.json
  put: 
    body:
      application/json:
        schema: putCorporateOffersRequestObject
        example: !include examples/body/example-put-corporate-offers-request.json
    responses: 
          200:
            description: Update Corporate Offers Table
            body: 
              application/json:
                schema: putCorporateOffersResponseObject
                example: !include examples/body/example-put-corporate-offers-response.json
  /{id}:
    description: Delete specific record
    delete:
      responses:
        200:
          body:
            application/json:
                schema: deleteCorporateOffersResponseObject
                example: !include examples/body/example-delete-corporate-offers.json
  /record:
    /{id}:
      uriParameters: 
              id:
                type: string
      post:
        is: [traits.BadRequestError, traits.InternalServerError]
        description: Approve/Reject specific record
        queryParameters:
          action:
            description: "Action To Take"
            required: true
            type: string
        responses:
          200:
            description: approve/reject record
            body:
              application/json:
                schema: postCorporateOffersRecordResponseObject
                example: !include examples/body/example-post-corporate-offers-record.json 