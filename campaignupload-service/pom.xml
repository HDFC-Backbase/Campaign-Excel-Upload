<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The simplest way to build a service with service-sdk-starter-core 
        is to use it as a parent in your project’s POM file, and alternative If you 
        don’t want to use service-sdk-starter-core as your project’s parent, you 
        can declare it as a dependency instead, see pom-as-dependency.xml -->
    <parent>
        <groupId>com.backbase.buildingblocks</groupId>
        <version>11.3.0</version>
        <artifactId>service-sdk-starter-core</artifactId>
        <relativePath />
    </parent>

    <groupId>com.backbase.archetype</groupId>
    <artifactId>campaignupload-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Backbase :: campaignupload-service</name>

    <properties>
        <java.version>1.8</java.version>
    </properties>

        <dependencies>
            <dependency>
                <groupId>com.backbase.buildingblocks</groupId>
                <artifactId>service-sdk-starter-test</artifactId>
                <scope>test</scope>
            </dependency>
            		<dependency>
           <groupId>com.backbase.archetype</groupId>
    <artifactId>campaignuploadspec</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    </dependency>
    	<dependency>
			<groupId>com.backbase.jwt.validate</groupId>
			<artifactId>validate-jwt</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
     
            <!--Added for persistence -->
		<dependency>
			<groupId>com.backbase.buildingblocks</groupId>
			<artifactId>persistence</artifactId>
		</dependency>
            <dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
            <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
          	<!-- Required for Local testing -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.oracle.ojdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Required for MySql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>
		
		<dependency>
			<groupId>com.backbase.buildingblocks</groupId>
			<artifactId>service-sdk-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>com.backbase.buildingblocks</groupId>
			<artifactId>spring-security-csrf</artifactId>
		</dependency>
        </dependencies>
<build>
		<plugins>
			<!-- Optionally, use the backbase-loader-tool application launcher The 
				backbase-loader-tool is a Spring Boot application launcher that lets you 
				add classpath dependencies to applications packaged as bootable jars at runtime 
				using the loader.path system property. To use the backbase-loader-tool, add 
				the following maven plugin under project/build/plugins in your POM file: -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>com.backbase.buildingblocks</groupId>
						<artifactId>backbase-loader-tool</artifactId>
						<version>11.1.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<layoutFactory
						implementation="com.backbase.boot.layout.BackbaseLayoutFactory" />
					<environmentVariables>
						<SIG_SECRET_KEY>JWTSecretKeyDontUseInProduction!</SIG_SECRET_KEY>
					</environmentVariables>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
